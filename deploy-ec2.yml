---
- name: Create EC2 Key Pair, VPC, Subnet
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Create VPC
      ec2_vpc_net:
        name: "{{ vpcname }}"
        cidr_block: "{{ cidrvpc }}"
        region: "{{ awsregion }}"
        state: present
      register: vpc
    - debug: { msg: "{{ vpc }}" }

    - name: Create subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ cidrsubnet }}"
        region: "{{ awsregion }}"
        state: present
      register: subnet
    - debug: { msg: "{{ subnet }}" }

    - name: Create Internet Gateway
      amazon.aws.ec2_vpc_igw:
        region: "{{ awsregion }}"
        vpc_id: "{{ vpc.vpc.id }}"
        state: present
      register: igw_result
    - debug: msg="{{ igw_result }}"

    - name: Create Route to Internet Gateway
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ awsregion }}"
        subnets:
          - "{{ subnet.subnet.id }}"
        state: present
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_result.gateway_id }}"

    - name: Create Security Group
      amazon.aws.ec2_security_group:
        name: "{{ sgname }}"
        region: "{{ awsregion }}"
        description: Security group for SSH ingress
        vpc_id: "{{ vpc.vpc.id }}"
        rules:
          - proto: tcp
            ports:
              - 22
            cidr_ip: 0.0.0.0/0
        state: present
      register: sg_result
    - debug: msg="{{ sg_result }}"

    - name: Create EC2 Key Pair
      amazon.aws.ec2_key:
        name: "{{ keyname }}"
        region: "{{ awsregion }}"
        state: present
        file_name: "{{ lookup('env', 'HOME') }}/.ssh/{{ keyname }}.pem"
      register: keypair_result
    - debug: { msg: "{{ keypair_result }}" }

    - name: Launch EC2 instance
      ec2_instance:
        name: "{{ instance_name }}"
        key_name: "{{ keyname }}"
        vpc_subnet_id: "{{ subnet.subnet.id }}"
        instance_type: "{{ instance_type }}"
        security_group: "{{ sgname }}"
        network:
          assign_public_ip: True
        image_id: ami-0f58aa386a2280f35
        region: "{{ awsregion }}"
        state: present
      register: ec2_instance
    - debug: { msg: "{{ ec2_instance }}" }

- name: Add newly created EC2 host to inventory
  hosts: localhost
  tasks:
    - name: Add new host
      add_host:
        hostname: "{{ hostvars['localhost']['ec2_instance']['instances'][0]['network_interfaces'][0]['association']['public_ip'] }}"
        ansible_host: "{{ hostvars['localhost']['ec2_instance']['instances'][0]['network_interfaces'][0]['association']['public_ip'] }}"
        ansible_user: "{{ ansible_user }}"
        private_key: "{{ lookup('env', 'HOME') }}/.ssh/{{ keyname }}.pem"

- name: Wait for port 22 to become open
  hosts: localhost
  tasks:
    - ansible.builtin.wait_for:
        host: "{{ hostvars['localhost']['ec2_instance']['instances'][0]['network_interfaces'][0]['association']['public_ip'] }}"
        port: 22
        delay: 10

- name: Install Nginx
  become: yes
  hosts: "{{ hostvars['localhost']['ec2_instance']['instances'][0]['network_interfaces'][0]['association']['public_ip'] }}"
  tasks:
    - name: Install Nginx
      yum:
        name: nginx
        state: present
      register: instll
    - debug: { msg: "{{ instll }}" }

    - name: Start Nginx
      service:
        name: nginx
        state: started
        enabled: yes
      register: srvc
    - debug: { msg: "{{ srvc }}" }