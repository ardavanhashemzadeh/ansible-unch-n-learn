---
- name: SUPERSET | Copy Environment File
  template:
    src: superset-environment-file.j2
    dest: "{{ superset_environment_file_folder }}/{{ superset_app_name }}"
    mode: 0644
    owner: "{{ superset_user }}"
    group: "{{ superset_group }}"
  tags: service

- name: SUPERSET | Copy Daemon script
  template:
    src: "{{ item.value.path }}"
    dest: "/lib/systemd/system/{{ item.value.service_name }}.service"
    mode: 0644
  notify: restart {{ item.value.service_name }}
  with_dict: "{{ superset_services }}"
  when: item.value.enabled
  tags: service

- name: SUPERSET | Configuring service
  systemd:
    name: "{{ item.value.service_name }}"
    state: "{{ item.value.state }}"
    enabled: "{{ item.value.enabled }}"
    daemon_reload: true
  with_dict: "{{ superset_services }}"
  when: item.value.enabled
  tags: service

- name: SUPERSET | Wait for service health OK
  uri:
    url: "{{ item.value.health_url | default(omit) }}"
    status_code: 200
  retries: "{{ item.value.check_num_retries }}"
  delay: "{{ item.value.check_start_delay }}"
  register: result
  until: result.status in [200]
  changed_when: false
  with_dict: "{{ superset_services }}"
  when:
    - item.value.state == 'started'
    - item.value.enabled
    - item.value.running
    - item.value.health_url
  tags: service
